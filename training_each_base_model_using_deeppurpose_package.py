# -*- coding: utf-8 -*-
"""Training each base model using DeepPurpose package.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1znN3yv9KSyRXOwMU7uoAXysnR1Z7zsRn
"""

###################################
# Loading DeepPurpose Package

!pip install DeepPurpose
! wget https://repo.anaconda.com/miniconda/Miniconda3-py37_4.8.2-Linux-x86_64.sh
! chmod +x Miniconda3-py37_4.8.2-Linux-x86_64.sh
! bash ./Miniconda3-py37_4.8.2-Linux-x86_64.sh -b -f -p /usr/local
! conda install -c rdkit rdkit -y
import sys
sys.path.append('/usr/local/lib/python3.7/site-packages/')

!pip install git+https://github.com/bp-kelley/descriptastorus

import rdkit
import DeepPurpose
import pandas as pd
import pickle
from DeepPurpose import DTI as models
from DeepPurpose.utils import *
from DeepPurpose.dataset import *

###################################
# Loading undersampled and splitted dataset

path= ''  # corresponding path

train_set=pd.read_pickle(path)
test_set=pd.read_pickle(path)
val_set=pd.read_pickle(path)

###################################
# choosing the drug and target encoder

drug_encoding, target_encoding = 'ESPF', 'AAC'   # for the other encoder change the ESPF to ErG


###################################
# encoding the train,val and test set


X_target=np.array(train_set['Target Sequence'])
X_drug=np.array(train_set['SMILES'])
y=np.array(train_set['Label'])

train, _, _ = data_process(X_drug, X_target, y,
                           drug_encoding, target_encoding,
                           split_method='random',
                           frac=[1, 0, 0],
                           random_seed=1)


X_target2=np.array(val_set['Target Sequence'])
X_drug2=np.array(val_set['SMILES'])
y2=np.array(val_set['Label'])

val, _, _ = data_process(X_drug2, X_target2, y2,
                           drug_encoding, target_encoding,
                           split_method='random',
                           frac=[1, 0, 0],
                           random_seed=1)

X_target3=np.array(test_set['Target Sequence'])
X_drug3=np.array(test_set['SMILES'])
y3=np.array(test_set['Label'])

test, _, _ = data_process(X_drug3, X_target3, y3,
                          drug_encoding, target_encoding,
                          split_method='random',
                          frac=[1, 0, 0],
                          random_seed=1)

###################################
# training

config = generate_config(drug_encoding, 
                         target_encoding, 
                         cls_hidden_dims = [1024,1024,512], 
                         train_epoch = 30, 
                         LR = 0.001, 
                         batch_size = 256)

net = models.model_initialize(**config)
net.train(train, val, test)
net.save_model(path)